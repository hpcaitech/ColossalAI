name: change_examples_check_all
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  pull_request:

  schedule:
    # run at 00:00 of every Sunday
    - cron:  '*/5 * * * *'

  workflow_dispatch:
    inputs:
      example_direction:
        type: string
        description: example direction, separated by comma
        required: true


jobs:
  detect-changed-files:
    if: github.event.workflow_dispatch == null
    runs-on: ubuntu-latest
    outputs:
      changedFiles: ${{ steps.changed-files.outputs.all_changed_files }}

    name: Check out all files
    steps:
      - uses: actions/checkout@v3  # This is necessary for the tj-actions/changed...Otherwise that function won't work. Because this step is to pull the code and enter the code.
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      # Example 1
      - name: Get all changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          since_last_remote_commit: true  # Important! Last time without this and workflow can not show the changed files!


  deploy:
    if: github.event.workflow_dispatch == null
    name: Build and deploy test image
    needs: detect-changed-files
    runs-on: self-hosted
    container:
      image: hpcaitech/pytorch-cuda:1.11.0-11.3.0
      options: --gpus all --rm -v /data/scratch/cifar-10:/data/scratch/cifar-10
    steps:

      - name: List all changed example files
        run: | 
          changedFileName=""
          for file in ${{ needs.detect-changed-files.outputs.changedFiles  }}; do
            changedFileName="${file}:${changedFileName}"
          done
          echo "$changedFileName was changed"
          res=`python .github/workflows/test.py --fileNameList $changedFileName`
          echo "$res is res"
          if [ -z "$res" ]
          then
                echo "\No change in example folder!"
          else
                pip install -r ./requirements/requirements.txt
                pip install -e .
                bash .github/workflows/test.sh "$res"
          fi




  matrix_preparation:
    if: github.event.workflow_dispatch == null
    name: Prepare Direction List
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

    - name: ðŸ“š Checkout
      uses: actions/checkout@v3
    - name: setup matrix
      id: set-matrix
      run: |
          dir=`ls ${PWD}/examples`
          allDir=""
          for i in ${dir}; do
            allDir="${i}:${allDir}"
            echo "${allDir} is allDir"
          done  
          res=`python .github/workflows/test1.py --fileNameList $allDir`
          container=$( IFS=',' ; echo "${res[*]}" )
          echo "$container"
          echo "::set-output name=matrix::{\"container\":$(echo "$container")}"



  weekly_check:
    if: github.event.schedule == '*/5 * * * *'
    name: Weekly check all examples
    needs: matrix_preparation
    runs-on: self-hosted
    strategy:
      matrix: ${{fromJson(needs.matrix_preparation.outputs.matrix)}}


    container:
      image: hpcaitech/pytorch-cuda:1.11.0-11.3.0
      options: --gpus all --rm -v /data/scratch/cifar-10:/data/scratch/cifar-10
    steps:

      - name: ðŸ“š Checkout
        uses: actions/checkout@v3
      - name: Traverse all files
        run: |
          dir=${{ matrix.container }}
          echo "${dir} is dir"
          dir1=`ls ${PWD}/examples/${dir}`
          for j in $dir1
            do
              echo "$j is testing"
              cd "${PWD}/examples/${dir}/${j}"
              bash test_ci.sh
              cd ../../..
            done

  manual_check_matrix_preparation:
    if: ${{github.event.workflow_dispatch != ''}}
    name: Check the examples user want
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix-1.outputs.matrix }}
    steps:
    - id: set-matrix-1
      env:
        check_dir: ${{ inputs.example_direction }}
      run: | 
        IFS=','
        all_mannual_check_dir=()

        for tv in $check_dir
        do
          all_mannual_check_dir+=("${tv}")
        done

        container=$( IFS=',' ; echo "${all_mannual_check_dir[*]}" )
        container="[${container}]"
        echo "$container"
        echo "::set-output name=matrix::{\"container\":$(echo "$container")}"
          

#  manual_check:
#    name: Manually check example files
#    needs: manual_check_matrix_preparation
#    if: github.event.workflow_dispatch != ''
#    runs-on: self-hosted
#    strategy:
#      matrix: ${{fromJson(needs.manual_check_matrix_preparation.outputs.matrix)}}
#    container:
#      image: hpcaitech/pytorch-cuda:1.11.0-11.3.0
#      options: --gpus all --rm -v /data/scratch/cifar-10:/data/scratch/cifar-10
#    steps:
#      - name: ðŸ“š Checkout
#        uses: actions/checkout@v3
#      - name: Traverse all files
#        run: |
#          dir=${{ matrix.container }}
#          echo "${dir} is dir"
#          dir1=`ls ${PWD}/examples/${dir}`
#          for j in $dir1
#            do
#              echo "$j is testing by manually parameters"
#              cd "${PWD}/examples/${dir}/${j}"
#              bash test_ci.sh
#              cd ../../..
#            done